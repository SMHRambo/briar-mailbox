name: Docker Image CI

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

env:
  TARGET: debian

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get current date and version
        id: version
        run: |
          echo "date=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_OUTPUT
          echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push lsalpine
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: latest, v1.0.8, v1.0, v1.0.8-lsalpine, v1.0-lsalpine, lsalpine, ls, v1.0.8-lsalpine3.20, v1.0-lsalpine3.20, lsalpine3.20, ls3.20
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            BUILD_DATE=${{ steps.version.outputs.date }}
            BUILD_VERSION=${{ steps.version.outputs.hash }}
          target: lsalpine

      - name: Build and push lsdebian
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: v1.0.8-lsdebian, v1.0-lsdebian, lsdebian, v1.0.8-lsbookworm, v1.0-lsbookworm, lsbookworm
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            BUILD_DATE=${{ steps.version.outputs.date }}
            BUILD_VERSION=${{ steps.version.outputs.hash }}
          target: lsdebian

      - name: Build and push lsubuntu
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: v1.0.8-lsubuntu, v1.0-lsubuntu, lsubuntu, v1.0.8-lsnoble, v1.0-lsnoble, lsnoble
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            BUILD_DATE=${{ steps.version.outputs.date }}
            BUILD_VERSION=${{ steps.version.outputs.hash }}
          target: lsubuntu

      - name: Build and push alpine
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: v1.0.8-alpine, v1.0-alpine, alpine, v1.0.8-alpine3.20, v1.0-alpine3.20, alpine3.20
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            BUILD_DATE=${{ steps.version.outputs.date }}
            BUILD_VERSION=${{ steps.version.outputs.hash }}
          target: alpine

      - name: Build and push debian
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: v1.0.8-debian, v1.0-debian, debian, v1.0.8-bookworm, v1.0-bookworm, bookworm
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            BUILD_DATE=${{ steps.version.outputs.date }}
            BUILD_VERSION=${{ steps.version.outputs.hash }}
          target: debian

      - name: Build and push ubuntu
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: v1.0.8-ubuntu, v1.0-ubuntu, ubuntu, v1.0.8-noble, v1.0-noble, noble
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            BUILD_DATE=${{ steps.version.outputs.date }}
            BUILD_VERSION=${{ steps.version.outputs.hash }}
          target: ubuntu
